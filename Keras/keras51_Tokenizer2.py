from tensorflow.keras.preprocessing.text import Tokenizer

text1 = "나는 진짜 매우 맛있는 밥을 진짜 마구 마구 먹었다"
text2 = "나는 매우 매우 잘생긴 지구용사 태권브이"

token = Tokenizer() #어절(띄어쓰기단위)로 자르기
token.fit_on_texts([text1, text2]) 

print(token.word_index) #{'매우': 1, '나는': 2, '진짜': 3, '마구': 4, '맛있는': 5, '밥을': 6, '먹었다': 7, '잘생긴': 8, '지구용사': 9, '태권브이': 10}

x = token.texts_to_sequences([text1, text2])
print(x) #[[2, 3, 1, 5, 6, 3, 4, 4, 7], [2, 1, 1, 8, 9, 10]] 리스트는 형식이 자유롭다
#두개의 문장을 하나로 처리하려면?

x = x[0] + x[1]  #(9,)+(6,) = (15,)
print(x) #[2, 3, 1, 5, 6, 3, 4, 4, 7, 2, 1, 1, 8, 9, 10] 차원하나가 사라짐?

from tensorflow.keras.utils import to_categorical

word_size=len(token.word_index) 

print("word_size: ", word_size) #word_size:  10

x = to_categorical(x)
print(x)
print(x.shape)
 
# [[0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
#  [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
#  [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
# (15, 11)

